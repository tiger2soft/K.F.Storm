<!--
Author : K.F.Storm
Email : yk000123 at sina.com
Website : http://www.kfstorm.com
-->
<local:WindowBase
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:tb="http://www.hardcodet.net/taskbar"
		xmlns:notify="clr-namespace:DoubanFM.NotifyIcon"
		xmlns:sound="clr-namespace:WPFSoundVisualizationLib;assembly=WPFSoundVisualizationLib"
        xmlns:resx="clr-namespace:DoubanFM.Resources"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:DoubanFM"  xmlns:core="clr-namespace:DoubanFM.Core;assembly=DoubanFM.Core"  mc:Ignorable="d" x:Class="DoubanFM.DoubanFMWindow" x:Name="Window"
		Title="{x:Static resx:Resources.WindowTitle}" ResizeMode="CanMinimize" Closed="Window_Closed" WindowStartupLocation="CenterScreen" IsVisibleChanged="Window_IsVisibleChanged" AllowsTransparency="True" Loaded="Window_Loaded" Topmost="{Binding Source={StaticResource Player}, Path=Settings.TopMost}" FontFamily="{Binding Settings.MainWindowFont, Source={StaticResource Player}}" Foreground="White" LocationChanged="Window_LocationChanged" MouseWheel="Window_MouseWheel" ContentRendered="Window_ContentRendered" MouseLeave="Window_MouseLeave" MouseEnter="Window_MouseEnter">
	<Window.Resources>
		<Storyboard x:Key="BackgroundColorStoryboard">
			<ColorAnimation Storyboard.TargetName="Window" Storyboard.TargetProperty="(local:DoubanFMWindow.OriginalBackgroundColor)" Duration="0:0:5" EasingFunction="{StaticResource Smooth}"/>
		</Storyboard>
		<Storyboard x:Key="ShowCover1Storyboard">
			<DoubleAnimation Storyboard.TargetName="Cover1" Storyboard.TargetProperty="Opacity" Duration="0:0:1" To="1"/>
		</Storyboard>
		<Storyboard x:Key="ShowCover2Storyboard">
			<DoubleAnimation Storyboard.TargetName="Cover1" Storyboard.TargetProperty="Opacity" Duration="0:0:1" To="0"/>
		</Storyboard>
		<Storyboard x:Key="SlideCoverRightStoryboard">
			<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FirstTimePanel" Storyboard.TargetProperty="Visibility">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
			</ObjectAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.Target="{Binding Settings, Source={StaticResource Player}}" Storyboard.TargetProperty="FirstTime">
				<DiscreteObjectKeyFrame KeyTime="0">
					<DiscreteObjectKeyFrame.Value>
						<sys:Boolean>False</sys:Boolean>
					</DiscreteObjectKeyFrame.Value>
				</DiscreteObjectKeyFrame>
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CoverGrid">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="300" EasingFunction="{StaticResource Smooth}"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="SlideCoverLeftStoryboard">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CoverGrid">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" EasingFunction="{StaticResource Smooth}"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="ChangeSongInfoStoryboard">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SongInfoPanel" Storyboard.TargetProperty="Opacity">
				<EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.5" EasingFunction="{StaticResource Smooth}"/>
				<EasingDoubleKeyFrame Value="1" KeyTime="0:0:2" EasingFunction="{StaticResource Smooth}"/>
			</DoubleAnimationUsingKeyFrames>
			<StringAnimationUsingKeyFrames Storyboard.TargetName="SongTitle" Storyboard.TargetProperty="Text">
				<DiscreteStringKeyFrame KeyTime="0:0:0.5"/>
			</StringAnimationUsingKeyFrames>
			<StringAnimationUsingKeyFrames Storyboard.TargetName="Artist" Storyboard.TargetProperty="Text">
				<DiscreteStringKeyFrame KeyTime="0:0:0.5"/>
			</StringAnimationUsingKeyFrames>
			<StringAnimationUsingKeyFrames Storyboard.TargetName="Album" Storyboard.TargetProperty="Text">
				<DiscreteStringKeyFrame KeyTime="0:0:0.5"/>
			</StringAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="SongInfoPanel">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="50"/>
				<DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="-20"/>
				<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="HideChannelList">
			<Int32Animation Duration="0" Storyboard.TargetProperty="(Panel.ZIndex)" To="0"/>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
				<EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.5" EasingFunction="{StaticResource Smooth}"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="50"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="ShowChannelList">
			<Int32Animation Duration="0" Storyboard.TargetProperty="(Panel.ZIndex)" To="1"/>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
				<EasingDoubleKeyFrame Value="1" KeyTime="0:0:1.5" EasingFunction="{StaticResource Smooth}"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
				<EasingDoubleKeyFrame KeyTime="0" Value="-20"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<CircleEase/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="PersonalClickStoryboard">
			<Storyboard Storyboard.TargetName="PersonalChannels">
				<StaticResource ResourceKey="ShowChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="PublicChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
		</Storyboard>
		<Storyboard x:Key="PublicClickStoryboard">
			<Storyboard Storyboard.TargetName="PersonalChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="PublicChannels">
				<StaticResource ResourceKey="ShowChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
		</Storyboard>
		<Storyboard x:Key="DjClickStoryboard">
			<Storyboard Storyboard.TargetName="PersonalChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="PublicChannels">
				<StaticResource ResourceKey="HideChannelList"/>
			</Storyboard>
			<Storyboard Storyboard.TargetName="DjChannels">
				<StaticResource ResourceKey="ShowChannelList"/>
			</Storyboard>
		</Storyboard>
		<BitmapImage x:Key="PauseThumbImage">Images/DoubanFM_Pause.png</BitmapImage>
		<BitmapImage x:Key="PlayThumbImage">Images/DoubanFM_Play.png</BitmapImage>
		<BitmapImage x:Key="NextThumbImage">Images/DoubanFM_Next.png</BitmapImage>
		<BitmapImage x:Key="LikeThumbImage">Images/DoubanFM_Like_Like.png</BitmapImage>
		<BitmapImage x:Key="LikeThumbImage_Disabled">Images/DoubanFM_Like_Disabled.png</BitmapImage>
		<BitmapImage x:Key="UnlikeThumbImage">Images/DoubanFM_Like_Unlike.png</BitmapImage>
		<BitmapImage x:Key="NeverThumbImage">Images/DoubanFM_Never.png</BitmapImage>
		<BitmapImage x:Key="NeverThumbImage_Disabled">Images/DoubanFM_Never_Disabled.png</BitmapImage>
		<Storyboard x:Key="OnVolumeControlMouseEnter">
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BdVolumeControl">
				<EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0">
					<EasingThicknessKeyFrame.EasingFunction>
						<CircleEase/>
					</EasingThicknessKeyFrame.EasingFunction>
				</EasingThicknessKeyFrame>
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="OnVolumeControlMouseLeave" BeginTime="0:0:1">
			<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="BdVolumeControl">
				<EasingThicknessKeyFrame KeyTime="0:0:1" Value="0,0,-65,0">
					<EasingThicknessKeyFrame.EasingFunction>
						<CircleEase EasingMode="EaseOut"/>
					</EasingThicknessKeyFrame.EasingFunction>
				</EasingThicknessKeyFrame>
			</ThicknessAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="VolumeFadeOut" Completed="VolumeFadeOut_Completed">
            <DoubleAnimation Storyboard.TargetProperty="VolumeFadeParameter" Storyboard.TargetName="Window" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
		<Storyboard x:Key="VolumeFadeIn">
            <DoubleAnimation Storyboard.TargetProperty="VolumeFadeParameter" Storyboard.TargetName="Window" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
		<Storyboard x:Key="VolumeDirectIn">
			<DoubleAnimation Storyboard.TargetProperty="VolumeFadeParameter" Storyboard.TargetName="Window" To="1" Duration="0"/>
		</Storyboard>
		<local:OpacityToTransparencyConverter x:Key="OpacityToTransparencyConverter"/>
		<local:ToTransparentColorConverter x:Key="ToTransparentColorConverter"/>
		<local:TransparencyToOpacityAndPreventFullTransparentConverter x:Key="TransparencyToOpacityAndPreventFullTransparentConverter"/>
		<local:TextBoxHintConverter x:Key="TextBoxHintConverter"/>
		<Storyboard x:Key="EnhancementsPanelShow">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EnhancementsPanel">
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="EnhancementsPanelHide">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EnhancementsPanel">
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="BdVolumeControl">
			<BeginStoryboard x:Name="OnVolumeControlMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnVolumeControlMouseEnter}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="BdVolumeControl">
			<BeginStoryboard x:Name="OnVolumeControlMouseLeave_BeginStoryboard" Storyboard="{StaticResource OnVolumeControlMouseLeave}"/>
		</EventTrigger>
	</Window.Triggers>
	<Window.TaskbarItemInfo>
		<TaskbarItemInfo>
			<TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo x:Name="LikeThumb" ImageSource="{StaticResource UnlikeThumbImage}" Click="LikeThumb_Click" Description="{x:Static resx:Resources.LikeThumbButton}" />
                <ThumbButtonInfo x:Name="NeverThumb" ImageSource="{StaticResource NeverThumbImage_Disabled}" Click="NeverThumb_Click" Description="{x:Static resx:Resources.DontPlayThumbButton}" IsEnabled="False"/>
                <ThumbButtonInfo x:Name="PauseThumb" Click="PauseThumb_Click" ImageSource="{StaticResource PauseThumbImage}" Description="{x:Static resx:Resources.PauseThumbButton}" />
                <ThumbButtonInfo x:Name="NextThumb" Click="NextThumb_Click" ImageSource="{StaticResource NextThumbImage}" Description="{x:Static resx:Resources.NextThumbButton}" />
			</TaskbarItemInfo.ThumbButtonInfos>
			<TaskbarItemInfo.Overlay>
				<MultiBinding Converter="{StaticResource BooleanChooserConverter}">
					<Binding Path="IsLiked" Source="{StaticResource Player}"/>
					<Binding Source="{StaticResource LikeThumbImage}"/>
					<Binding Source="{x:Null}"/>
				</MultiBinding>
			</TaskbarItemInfo.Overlay>
		</TaskbarItemInfo>
	</Window.TaskbarItemInfo>
	<Window.Background>
		<SolidColorBrush x:Name="SolidBackground" Color="#FF1960AF" Opacity="{Binding Settings.BackgroundTransparency, Source={StaticResource Player}, Converter={StaticResource TransparencyToOpacityAndPreventFullTransparentConverter}}"/>
	</Window.Background>
	<Grid>
		<Grid.LayoutTransform>
			<TransformGroup>
				<ScaleTransform ScaleX="{Binding Settings.ScaleTransform, Source={StaticResource Player}}" ScaleY="{Binding ScaleX, RelativeSource={RelativeSource Self}}"/>
			</TransformGroup>
		</Grid.LayoutTransform>
        <tb:TaskbarIcon x:Name="NotifyIcon" PopupActivation="RightClick" ToolTipText="{x:Static resx:Resources.WindowTitle}" TrayLeftMouseUp="NotifyIcon_TrayLeftMouseUp">
			<tb:TaskbarIcon.TrayToolTip>
				<notify:BalloonSongInfo/>
			</tb:TaskbarIcon.TrayToolTip>
			<tb:TaskbarIcon.TrayPopup>
				<notify:PopupControlPanel/>
			</tb:TaskbarIcon.TrayPopup>
			<tb:TaskbarIcon.IconSource>
				<MultiBinding Converter="{StaticResource BooleanChooserConverter}">
					<Binding Path="IsLiked" Source="{StaticResource Player}"/>
					<Binding>
						<Binding.Source>
							<BitmapImage UriSource="icon_like.ico"/>
						</Binding.Source>
					</Binding>
					<Binding>
						<Binding.Source>
							<BitmapImage UriSource="icon.ico"/>
						</Binding.Source>
					</Binding>
				</MultiBinding>
			</tb:TaskbarIcon.IconSource>
		</tb:TaskbarIcon>
		<Grid x:Name="grid" Height="300">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="300" />
				<ColumnDefinition Width="300"/>
			</Grid.ColumnDefinitions>
			<Grid x:Name="LeftPanel" Background="Transparent" Panel.ZIndex="1" ClipToBounds="True">
				<TabControl x:Name="ControlPanel" Style="{StaticResource ControlPanelStyle}" ClipToBounds="True" FocusVisualStyle="{x:Null}">
					<TabItem Header="{StaticResource TabItemChannels}">
						<Grid>
							<Grid x:Name="ChannelsGrid" Visibility="{Binding IsInitialized, Source={StaticResource Player}, Converter={StaticResource BooleanToVisibilityConverter}}">
								<Grid.RowDefinitions>
									<RowDefinition Height="40"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Grid Background="#4E000000">
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
										<ColumnDefinition/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
                                    <RadioButton x:Name="ButtonPersonal" Margin="5" Content="{x:Static resx:Resources.PersonalRadioRB}" IsChecked="True" Style="{StaticResource ChannelCategoryStyle}">
										<RadioButton.Triggers>
											<EventTrigger RoutedEvent="RadioButton.Checked">
												<BeginStoryboard Storyboard="{StaticResource PersonalClickStoryboard}"/>
											</EventTrigger>
										</RadioButton.Triggers>
									</RadioButton>
                                    <RadioButton x:Name="ButtonPublic" Grid.Column="1" Margin="5" Content="{x:Static resx:Resources.PublicRadioRB}" Style="{StaticResource ChannelCategoryStyle}">
										<RadioButton.Triggers>
											<EventTrigger RoutedEvent="RadioButton.Checked">
												<BeginStoryboard Storyboard="{StaticResource PublicClickStoryboard}"/>
											</EventTrigger>
										</RadioButton.Triggers>
									</RadioButton>
                                    <RadioButton x:Name="ButtonDj" Grid.Column="2" Margin="5" Content="{x:Static resx:Resources.DJRadioRB}" Style="{StaticResource ChannelCategoryStyle}">
										<RadioButton.Triggers>
											<EventTrigger RoutedEvent="RadioButton.Checked">
												<BeginStoryboard Storyboard="{StaticResource DjClickStoryboard}"/>
											</EventTrigger>
										</RadioButton.Triggers>
									</RadioButton>
								</Grid>
								<Grid x:Name="ChannelsContentGrid" Grid.Row="1" TextOptions.TextFormattingMode="Ideal">
									<ListBox x:Name="PersonalChannels" SelectionChanged="PersonalChannels_SelectionChanged" Style="{StaticResource ChannelsStyle}" Panel.ZIndex="1">
										<ListBox.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</ListBox.RenderTransform>
									</ListBox>
									<ListBox x:Name="PublicChannels" SelectionChanged="PublicChannels_SelectionChanged" Style="{StaticResource ChannelsStyle}" Opacity="0">
										<ListBox.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</ListBox.RenderTransform>
									</ListBox>
									<Grid Margin="5" Height="30" VerticalAlignment="Top" Opacity="{Binding Opacity, ElementName=DjChannels}" Panel.ZIndex="{Binding (Panel.ZIndex), ElementName=DjChannels}" RenderTransform="{Binding RenderTransform, ElementName=DjChannels}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<TextBox x:Name="TbSearchDj" VerticalAlignment="Center"/>
                                        <TextBlock x:Name="TbSearchDjHint" Margin="{Binding Margin, ElementName=TbSearchDj}" Padding="{Binding Padding, ElementName=TbSearchDj}" Foreground="Black" IsHitTestVisible="False" Opacity="0.5" Text="{x:Static resx:Resources.DJSearchTextBlock}" VerticalAlignment="Center">
											<TextBlock.Visibility>
												<MultiBinding Converter="{StaticResource TextBoxHintConverter}">
													<Binding Path="IsFocused" ElementName="TbSearchDj"/>
													<Binding Path="Text" ElementName="TbSearchDj"/>
												</MultiBinding>
											</TextBlock.Visibility>
										</TextBlock>
										<Button x:Name="BtnSearchDj" Grid.Column="1" Margin="10,0,0,0" Click="BtnSearchDj_Click" IsDefault="True" Style="{StaticResource SearchStyle}"/>
									</Grid>
									<ListBox x:Name="DjChannels" Style="{StaticResource ChannelsStyle}" SelectionChanged="DjChannels_SelectionChanged" Opacity="0" Margin="0,40,0,0" ScrollViewer.ScrollChanged="DjChannels_ScrollChanged">
										<ListBox.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</ListBox.RenderTransform>
										<ListBox.ItemTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding Name}" FontSize="20" TextWrapping="Wrap" Padding="10"/>
											</DataTemplate>
										</ListBox.ItemTemplate>
									</ListBox>
								</Grid>
							</Grid>
							<Grid Visibility="{Binding IsInitialized, Source={StaticResource Player}, Converter={StaticResource BoolReverseToVisibilityConverter}}">
                                <Label FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{x:Static resx:Resources.PleaseWaitLabel}"/>
							</Grid>
						</Grid>
					</TabItem>
					<TabItem Header="{StaticResource TabItemSearch}">
						<Grid>
							<Grid Visibility="{Binding IsInitialized, Source={StaticResource Player}, Converter={StaticResource BooleanToVisibilityConverter}}">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition/>
									<RowDefinition Height="40"/>
								</Grid.RowDefinitions>
								<Grid Margin="10" Height="30">
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<TextBox x:Name="SearchText" IsEnabled="{Binding Source={StaticResource Player}, Path=ChannelSearch.IsSearchFinished}" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
									<Button x:Name="Search" Grid.Column="1" Margin="10,0,0,0" Click="Search_Click" IsDefault="True" IsEnabled="{Binding Source={StaticResource Player}, Path=ChannelSearch.IsSearchFinished}" Style="{StaticResource SearchStyle}"/>
								</Grid>
								<ListBox x:Name="SearchResultList" Grid.Row="1" Style="{StaticResource SearchResultListStyle}" SelectionChanged="SearchResultList_SelectionChanged" ItemsSource="{Binding Source={StaticResource Player}, Path=ChannelSearch.SearchResult}" />
                                <Label Grid.Row="1" Visibility="{Binding Converter={StaticResource BoolReverseToVisibilityConverter}, Source={StaticResource Player}, Path=ChannelSearch.IsSearchFinished}" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{x:Static resx:Resources.SearchingLabel}"/>
                                <StackPanel Grid.Row="1" Visibility="{Binding Path=ChannelSearch.ShowNoResultHint, Source={StaticResource Player}, Converter={StaticResource BooleanToVisibilityConverter}}" Height="Auto" VerticalAlignment="Center">
                                    <TextBlock HorizontalAlignment="Center" Text="{x:Static resx:Resources.ConsistentResultsLabel}" TextAlignment="Center" TextWrapping="Wrap"/>
                                    <StackPanel Visibility="{Binding Converter={StaticResource BoolToVisibilityConverter}, Source={StaticResource Player}, Path=Settings.IsSearchFilterEnabled}">
                                        <TextBlock HorizontalAlignment="Center" Text="{x:Static resx:Resources.SearchResultsCanNotListenLabel}" TextAlignment="Center" TextWrapping="Wrap"/>
                                        <TextBlock HorizontalAlignment="Center" Text="{x:Static resx:Resources.MayNextResultsLabel}" TextWrapping="Wrap"/>
									</StackPanel>
								</StackPanel>
								<StackPanel Grid.Row="2" HorizontalAlignment="Center" Orientation="Horizontal" Height="30">
									<Button x:Name="PreviousPage" Click="PreviousPage_Click" IsEnabled="{Binding Path=ChannelSearch.IsPreviousPageEnabled, Source={StaticResource Player}}" Style="{StaticResource PreviousPageStyle}"/>
									<Border Width="20"/>
									<Button x:Name="NextPage" Click="NextPage_Click" IsEnabled="{Binding Path=ChannelSearch.IsNextPageEnabled, Source={StaticResource Player}}" Style="{StaticResource NextPageStyle}"/>
								</StackPanel>
							</Grid>
							<Grid Visibility="{Binding IsInitialized, Source={StaticResource Player}, Converter={StaticResource BoolReverseToVisibilityConverter}}">
								<Label FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{x:Static resx:Resources.PleaseWaitLabel}"/>
							</Grid>
						</Grid>
					</TabItem>
					<TabItem x:Name="Account" Header="{StaticResource TabItemAccount}">
						<Grid>
                            <Grid x:Name="AccountPanel" Visibility="{Binding IsInitialized, Source={StaticResource Player}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid x:Name="LogOnPanel" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.IsLoggedOff, Source={StaticResource Player}}">
                                	<DockPanel Margin="20">
										<StackPanel DockPanel.Dock="Top">
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition/>
													<RowDefinition/>
													<!--<RowDefinition Height="Auto"/>-->
												</Grid.RowDefinitions>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto"/>
													<ColumnDefinition/>
												</Grid.ColumnDefinitions>
												<TextBlock VerticalAlignment="Center" Text="{x:Static resx:Resources.EmailUserNameBlock}" Margin="0,2,2,2" FontSize="14"/>
                                                <TextBlock VerticalAlignment="Center" Grid.Row="1" Text="{x:Static resx:Resources.PasswordBlock}" Margin="0,2,2,2" FontSize="14"/>
												<TextBox x:Name="TbUsername" Grid.Column="1" Margin="2,2,0,2" TextChanged="TbUsername_OnTextChanged"/>
                                                <PasswordBox x:Name="PbPassword" Grid.Row="1" Grid.Column="1" Margin="2,2,0,2" PasswordChanged="PbPassword_PasswordChanged" />
                                                <!--<TextBlock Grid.Row="2" VerticalAlignment="Center" Text="{x:Static resx:Resources.VerificationCaptchaBlock}" Visibility="{Binding Visibility, ElementName=CaptchaText}"/>
												<TextBox x:Name="CaptchaText" Grid.Row="2" Grid.Column="1" Margin="0,2" Visibility="{Binding UserAssistant.HasCaptcha, Source={StaticResource Player}, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}}"/>-->
											</Grid>
                                            <!--<Button x:Name="ButtonRefreshCaptcha" Grid.Column="2" Click="ButtonRefreshCaptcha_Click" Padding="0" Height="40" BorderThickness="0" ToolTip="{x:Static resx:Resources.RefreshVerificationCaptchaButton}" IsTabStop="False" Visibility="{Binding Visibility, ElementName=CaptchaText}" Margin="0,2" Cursor="Hand">
												<Image x:Name="Captcha" Stretch="Fill" Source="{Binding UserAssistant.CaptchaUrl, Source={StaticResource Player}}"/>
											</Button>-->
											<StackPanel Margin="0,2">
												<TextBlock x:Name="LogOnFailedHint" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding UserAssistant.ShowLogOnFailedHint, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Player}}" Text="{Binding UserAssistant.LogOnFailedMessage, Source={StaticResource Player}}" Margin="0,2"/>
												<Button x:Name="ButtonLogOn" Grid.Column="1" Click="ButtonLogOn_Click" IsDefault="True" Content="{x:Static resx:Resources.LoginButton}" HorizontalAlignment="Right" Width="100" Height="40" FontSize="16" Margin="0,20"/>
											</StackPanel>
										</StackPanel>
										<StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                                            <TextBlock HorizontalAlignment="Right" FontSize="14">
											    <Hyperlink x:Name="ButtonSignUp" Click="ButtonSignUp_Click" Foreground="White">
												    <Run Text="{x:Static resx:Resources.RegisterButton}"/>
											    </Hyperlink>
                                            </TextBlock>
                                            <!--<DockPanel MinWidth="150" Margin="0,5" HorizontalAlignment="Center">
                                                <CheckBox x:Name="CheckBoxRememberPassword" DockPanel.Dock="Left" Content="{x:Static resx:Resources.RememberPasswordCheckBox}" IsChecked="{Binding Settings.RememberPassword, Mode=TwoWay, Source={StaticResource Player}}"/>
												<CheckBox x:Name="CheckBoxAutoLogOnNextTime" DockPanel.Dock="Right" Content="{x:Static resx:Resources.AutoLoginCheckBox}" IsChecked="{Binding Settings.AutoLogOnNextTime, Mode=TwoWay, Source={StaticResource Player}}"/>
                                                <Border MinWidth="5" MaxWidth="20"/>
                                            </DockPanel>-->
										</StackPanel>
									</DockPanel>
								</Grid>
								<Grid x:Name="LogOffPanel" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.IsLoggedOn, Source={StaticResource Player}}">
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition/>
										<!--<RowDefinition/>-->
									</Grid.RowDefinitions>
									<TextBlock x:Name="TbNickname" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>
									<StackPanel Grid.Row="1" VerticalAlignment="Center" TextElement.FontSize="14">
										<TextBlock HorizontalAlignment="Center">
											<Hyperlink x:Name="HlPlayed" Click="HlPlayed_Click" Foreground="White">
												<Run x:Name="RunPlayed"/>
											</Hyperlink>
										</TextBlock>
										<TextBlock HorizontalAlignment="Center">
											<Hyperlink x:Name="HlLiked" Click="HlLiked_Click" Foreground="White">
												<Run x:Name="RunLiked"/>
											</Hyperlink>
										</TextBlock>
										<TextBlock HorizontalAlignment="Center">
											<Hyperlink x:Name="HlBanned" Click="HlBanned_Click" Foreground="White">
												<Run x:Name="RunBanned"/>
											</Hyperlink>
										</TextBlock>
									</StackPanel>
                                    <Grid x:Name="ProPanel" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontSize="14">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="{x:Static resx:Resources.BitRate}" Margin="0,0,5,0"/>
                                        <ComboBox x:Name="CbBitRateSelector" Grid.Column="1" SelectionChanged="CbBitRateSelector_OnSelectionChanged" MinWidth="100">
                                            <ComboBoxItem Content="64 kbps" Tag="{x:Static core:ProRate.Kbps64}"/>
                                            <ComboBoxItem Content="128 kbps" Tag="{x:Static core:ProRate.Kbps128}"/>
                                            <ComboBoxItem Content="192 kbps" Tag="{x:Static core:ProRate.Kbps192}"/>
                                        </ComboBox>
                                    </Grid>
                                    <!--<Label Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="30" Content="{x:Static resx:Resources.TheLoggedLabel}"/>-->
                                    <Button Grid.Row="3" x:Name="ButtonLogOff" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="20,5" Click="ButtonLogOff_Click" Content="{x:Static resx:Resources.LogoutButton}" FontSize="16"/>
								</Grid>
								<Grid x:Name="LoggingOnPanel" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.IsLoggingOn, Source={StaticResource Player}}">
									<Label FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{x:Static resx:Resources.LoggingInLabel}"/>
								</Grid>
								<Grid x:Name="LoggingOffPanel" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}, Path=UserAssistant.IsLoggingOff, Source={StaticResource Player}}">
									<Label FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{x:Static resx:Resources.LoggingOutLabel}"/>
								</Grid>
							</Grid>
							<Grid Visibility="{Binding IsInitialized, Source={StaticResource Player}, Converter={StaticResource BoolReverseToVisibilityConverter}}">
								<Label FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{x:Static resx:Resources.PleaseWaitLabel}"/>
							</Grid>
						</Grid>
					</TabItem>
					<TabItem Header="{StaticResource TabItemSettings}">
						<Grid Margin="20">
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" MinWidth="100">
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition Height="10"/>
									<RowDefinition/>
									<RowDefinition Height="10"/>
									<RowDefinition/>
									<RowDefinition Height="10"/>
									<RowDefinition/>
									<RowDefinition Height="10"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Button x:Name="ButtonGeneralSetting" Content="{x:Static resx:Resources.GeneralSettingsButton}" Click="ButtonGeneralSetting_Click"/>
								<Button Grid.Row="2" x:Name="ButtonUISetting" Content="{x:Static resx:Resources.InterfaceSettingsButton}" Click="ButtonUISetting_Click"/>
								<Button Grid.Row="4" x:Name="ButtonLyricsSetting" Content="{x:Static resx:Resources.LyricsSettingsButton}" Click="LyricsSetting_Click" />
								<Button Grid.Row="6" x:Name="ButtonHotKeySettings" Click="ButtonHotKeySettings_Click" Content="{x:Static resx:Resources.HotKeySettingsButton}"/>
								<Button Grid.Row="8" x:Name="ButtonShareSetting" Content="{x:Static resx:Resources.ShareSettingsButton}" Click="ButtonShareSetting_Click"/>
							</Grid>
							<StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
								<Button x:Name="BtnImportSettings" Content="{x:Static resx:Resources.ImportButton}" MinWidth="50" Click="BtnImportSettings_Click" Margin="0,0,10,0"/>
								<Button x:Name="BtnExportSettings" Content="{x:Static resx:Resources.ExportButton}" MinWidth="50" Click="BtnExportSettings_Click" Margin="0,0,10,0"/>
								<Button x:Name="BtnResetSettings" Content="{x:Static resx:Resources.ResetButton}" MinWidth="50" Click="BtnResetSettings_Click"/>
							</StackPanel>
						</Grid>
					</TabItem>
					<TabItem Header="{StaticResource TabItemInfo}">
						<Border Padding="20">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition/>
									<RowDefinition/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
                                <Viewbox StretchDirection="DownOnly" HorizontalAlignment="Center">
                                    <StackPanel Orientation="Horizontal">
                                        <Button x:Name="GoToHomePage" Height="40" Style="{StaticResource IconStyle}" Margin="0,0,10,0" Click="GoToHomePage_Click"/>
                                        <Label HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="26.667" Content="{x:Static resx:Resources.WindowTitleShort}"/>
                                        <Button x:Name="BtnHelp" Height="40" Click="BtnHelp_Click" Style="{StaticResource HelpStyle}"/>
                                    </StackPanel>
                                </Viewbox>
                                <TextBlock Grid.Row="1" HorizontalAlignment="Center" Text="{x:Static resx:Resources.ThirdPartyClientsBlock}"/>
                                <Label x:Name="lbVersion" Grid.Row="2" HorizontalAlignment="Center" Margin="0,0,0,10">X.X.X</Label>
								<Grid Grid.Row="4" Height="40">
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
										<ColumnDefinition/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Button x:Name="Feedback" Click="Feedback_Click" Style="{StaticResource FeedbackStyle}"/>
									<Button x:Name="BtnDonate" Grid.Column="1" Style="{StaticResource DonateStyle}" Click="BtnDonate_Click"/>
									<Button x:Name="VisitOfficialWebsite" Grid.Column="2" Click="VisitOfficialWebsite_Click" Style="{StaticResource DoubanFMOfficialWebsiteStyle}"/>
								</Grid>
								<Label Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center">Copyright © 2011-2013 K.F.Storm</Label>
							</Grid>
						</Border>
					</TabItem>
				</TabControl>
			</Grid>
			<Grid x:Name="RightPanel" Grid.Column="1" Background="Transparent" ClipToBounds="True" MouseMove="RightPanel_MouseMove">
				<Grid x:Name="SpectrumPanel" Height="50" Margin="-5,0,-5,-15" VerticalAlignment="Bottom" Opacity="{Binding Settings.SpectrumTransparency, Source={StaticResource Player}, Converter={StaticResource OpacityToTransparencyConverter}}" Visibility="{Binding Settings.ShowSpectrum, Source={StaticResource Player}, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid Opacity="{Binding VolumeFadeParameter, ElementName=Window}">
					    <Grid.Effect>
						    <BlurEffect Radius="7"/>
					    </Grid.Effect>
					    <Grid.ColumnDefinitions>
						    <ColumnDefinition/>
						    <ColumnDefinition/>
					    </Grid.ColumnDefinitions>
					    <Rectangle RenderTransformOrigin="0.5,0.5">
						    <Rectangle.RenderTransform>
							    <ScaleTransform ScaleX="-1"/>
						    </Rectangle.RenderTransform>
						    <Rectangle.Fill>
							    <VisualBrush Visual="{Binding ElementName=SpectrumAnalyzer}" Stretch="None" AlignmentX="Left" AlignmentY="Bottom"/>
						    </Rectangle.Fill>
					    </Rectangle>
					    <sound:SpectrumAnalyzer x:Name="SpectrumAnalyzer" Grid.Column="1" BarSpacing="0" PeakStyle="{x:Null}" IsFrequencyScaleLinear="True" Margin="-1,0,0,-1" AveragePeaks="True">
						    <sound:SpectrumAnalyzer.BarStyle>
							    <Style TargetType="{x:Type Rectangle}">
								    <Setter Property="Fill">
									    <Setter.Value>
										    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Name="BarBrush">
											    <GradientStop Color="{Binding (GradientBrush.GradientStops)[1].Color, Converter={StaticResource ToTransparentColorConverter}, RelativeSource={RelativeSource AncestorType={x:Type LinearGradientBrush}}}" Offset="0"/>
											    <GradientStop Color="{Binding Settings.SpectrumColor, Source={StaticResource Player}}" Offset="0.7"/>
										    </LinearGradientBrush>
									    </Setter.Value>
								    </Setter>
							    </Style>
						    </sound:SpectrumAnalyzer.BarStyle>
					    </sound:SpectrumAnalyzer>
                    </Grid>
                </Grid>
				<Grid Margin="15,10,10,10">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="3*"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<Grid Height="20">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="2*"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<TextBlock x:Name="ChannelTextBlock" TextTrimming="CharacterEllipsis" Foreground="White" FontSize="14.667" FontStretch="Normal" Text="{Binding CurrentChannel, Source={StaticResource Player}}" />
						<StackPanel Grid.Column="1" x:Name="WindowStateControls" Orientation="Horizontal" HorizontalAlignment="Right">
							<Button x:Name="ButtonMinimize" Click="ButtonMinimize_Click" Style="{StaticResource MinimizeStyle}"/>
							<Border Width="10"/>
							<Button x:Name="ButtonToNotifyIcon" Click="ButtonToNotifyIcon_Click" Style="{StaticResource ToNotifyIconStyle}"/>
							<Border Width="10"/>
							<Button x:Name="ButtonExit" Click="ButtonExit_Click" Style="{StaticResource ExitStyle}"/>
						</StackPanel>
					</Grid>
					<Grid Grid.Row="1" x:Name="SongInfoPanel" TextOptions.TextFormattingMode="Ideal" VerticalAlignment="Top" Height="120" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>
						<Grid.RowDefinitions>
							<RowDefinition Height="50"/>
							<RowDefinition/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Viewbox Margin="0,1" HorizontalAlignment="Left" StretchDirection="DownOnly">
                            <TextBlock x:Name="SongTitle" FontSize="50" VerticalAlignment="Center" Text="{x:Static resx:Resources.WindowTitle}" Foreground="White"/>
						</Viewbox>
						<Viewbox Margin="0,1" Grid.Row="1" HorizontalAlignment="Left" StretchDirection="DownOnly">
							<TextBlock x:Name="Artist" FontSize="20" VerticalAlignment="Center" Foreground="White"/>
						</Viewbox>
						<Viewbox Margin="0,1" Grid.Row="2" HorizontalAlignment="Left" StretchDirection="DownOnly">
							<TextBlock x:Name="Album" VerticalAlignment="Center" FontSize="20" Foreground="White" />
						</Viewbox>
					</Grid>
					<Grid x:Name="EnhancementsPanel" Grid.Row="2" Margin="0,5" HorizontalAlignment="Right" Height="24" ClipToBounds="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid x:Name="SharePanel">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.Triggers>
								<EventTrigger RoutedEvent="UIElement.MouseEnter">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Shares" Storyboard.TargetProperty="Opacity" To="1" EasingFunction="{StaticResource Smooth}" Duration="0:0:0.5"/>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Shares" Storyboard.TargetProperty="Width">
												<DiscreteDoubleKeyFrame KeyTime="0" Value="{x:Static sys:Double.NaN}"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="UIElement.MouseLeave">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Shares" Storyboard.TargetProperty="Opacity" To="0" EasingFunction="{StaticResource Smooth}" Duration="0:0:1"/>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Shares" Storyboard.TargetProperty="Width">
												<DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Grid.Triggers>
							<Viewbox StretchDirection="DownOnly" HorizontalAlignment="Right">
								<StackPanel x:Name="Shares" Height="24" Width="0" Opacity="0" Orientation="Horizontal" ButtonBase.Click="ShareButton_Click">
									<Button Style="{StaticResource ShareDoubanStyle}" Tag="{x:Static core:Share+Sites.Douban}"/>
									<Button Style="{StaticResource ShareWeiboStyle}" Tag="{x:Static core:Share+Sites.Weibo}"/>
									<Button Style="{StaticResource ShareMsnStyle}" Tag="{x:Static core:Share+Sites.Msn}"/>
									<Button Style="{StaticResource ShareKaixinStyle}" Tag="{x:Static core:Share+Sites.Kaixin}"/>
									<Button Style="{StaticResource ShareRenenStyle}" Tag="{x:Static core:Share+Sites.Renren}"/>
									<Button Style="{StaticResource ShareQzoneStyle}" Tag="{x:Static core:Share+Sites.Qzone}"/>
									<Button Style="{StaticResource ShareTencentWeiboStyle}" Tag="{x:Static core:Share+Sites.TencentWeibo}"/>
									<Button Style="{StaticResource ShareFanfouStyle}" Tag="{x:Static core:Share+Sites.Fanfou}"/>
									<Button Style="{StaticResource ShareFacebookStyle}" Tag="{x:Static core:Share+Sites.Facebook}"/>
									<Button Style="{StaticResource ShareTwitterStyle}" Tag="{x:Static core:Share+Sites.Twitter}"/>
								</StackPanel>
							</Viewbox>
							<Button x:Name="BtnCopyUrl" Grid.Column="1" Style="{StaticResource ShareStyle}" ToolTip="{x:Static resx:Resources.CopyUrlButton}" Click="BtnCopyUrl_Click" Visibility="{Binding ShareSetting.EnableOneKeyShare, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolReverseToVisibilityConverter}, ElementName=Window}"/>
							<Button x:Name="BtnOneKeyShare" Grid.Column="1" Style="{StaticResource ShareStyle}" ToolTip="{x:Static resx:Resources.ShareKeyButton}" Click="BtnOneKeyShare_Click" Visibility="{Binding ShareSetting.EnableOneKeyShare, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}, ElementName=Window}"/>
						</Grid>
						<Button x:Name="BtnDownloadSearch" Grid.Column="1" Style="{StaticResource SearchStyle}" ToolTip="{x:Static resx:Resources.DownloadSearchButton}" Click="BtnDownloadSearch_Click"/>
						<CheckBox x:Name="CheckBoxShowLyrics" Grid.Column="2" IsChecked="{Binding Settings.ShowLyrics, Source={StaticResource Player}}" Checked="CheckBoxShowLyrics_Checked" Unchecked="CheckBoxShowLyrics_Unchecked" Style="{StaticResource ShowLyricsStyle}"/>
						<Border x:Name="BdVolumeControl" Grid.Column="3" Background="Transparent" Margin="0,0,-65,0">
							<Viewbox StretchDirection="DownOnly">
								<local:VolumeControl x:Name="VolumeControl" IsMuted="{Binding Settings.IsMuted, Mode=TwoWay, Source={StaticResource Player}}" Volume="{Binding Settings.Volume, Mode=TwoWay, Source={StaticResource Player}}" Width="150"/>
							</Viewbox>
						</Border>
					</Grid>
					<Grid Grid.Row="3" VerticalAlignment="Bottom" Margin="0,2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<TextBlock x:Name="CurrentTime" FontSize="18" Foreground="White" Text="00:00"/>
						<TextBlock Grid.Column="1" x:Name="TotalTime" FontSize="18" HorizontalAlignment="Right" Foreground="White" Text="00:00"/>
					</Grid>
					<Slider x:Name="Slider" Grid.Row="4" Margin="0,5" Style="{StaticResource SliderStyleForProgress}" Foreground="{Binding Background, Converter={StaticResource WindowBackgroundToSliderForegroundConverter}, ElementName=Window}" Minimum="0" Maximum="1"/>
					<Grid Grid.Row="5" HorizontalAlignment="Center" Height="50" VerticalAlignment="Bottom">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="38" />
							<ColumnDefinition Width="20"/>
							<ColumnDefinition Width="38" />
							<ColumnDefinition Width="20"/>
							<ColumnDefinition Width="32" />
							<ColumnDefinition Width="20"/>
							<ColumnDefinition Width="38"/>
						</Grid.ColumnDefinitions>
						<CheckBox Grid.Column="0" x:Name="CheckBoxLike" Style="{StaticResource LikeStyle}" IsChecked="{Binding IsLiked, Source={StaticResource Player}}" IsEnabled="{Binding IsLikedEnabled, Source={StaticResource Player}}" />
						<Border Grid.Column="2" Background="Transparent" ToolTip="{x:Static resx:Resources.AvailableAfterLoginBorder}" Visibility="{Binding IsEnabled, ElementName=ButtonNever, Converter={StaticResource BoolReverseToVisibilityConverter}}"/>
						<Button Grid.Column="2" x:Name="ButtonNever" Style="{StaticResource NeverStyle}" Click="ButtonNever_Click" IsEnabled="{Binding IsNeverEnabled, Source={StaticResource Player}}" IsHitTestVisible="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
						<CheckBox Grid.Column="4" x:Name="CheckBoxPause" Style="{StaticResource PauseStyle}" IsChecked="{Binding IsPlaying, Converter={StaticResource BoolReverseConverter}, Source={StaticResource Player}}" />
						<Button Grid.Column="6" x:Name="ButtonNext" Click="ButtonNext_Click" Style="{StaticResource NextStyle}"/>
					</Grid>
				</Grid>
			</Grid>
		</Grid>
		<Grid x:Name="CoverGrid" MouseLeftButtonUp="CoverGrid_MouseLeftButtonUp" Width="{Binding ActualWidth, ElementName=LeftPanel}" Height="{Binding ActualHeight, ElementName=LeftPanel}" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment, GridBox" MouseMove="CoverGrid_MouseMove" MouseLeave="CoverGrid_MouseLeave" d:IsHidden="True" RenderTransformOrigin="0.5,0.5">
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<Grid x:Name="Covers">
				<Image x:Name="Cover2" Stretch="UniformToFill"/>
				<Image x:Name="Cover1" Stretch="UniformToFill" Source="/DoubanFM;component/Images/DoubanFM_NoCover.png" />
			</Grid>
			<Grid x:Name="LyricsPanel" Height="70" VerticalAlignment="Bottom" Visibility="Hidden">
				<Border Background="{Binding Background, ElementName=Window}">
					<Border.OpacityMask>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Offset="0"/>
							<GradientStop Color="#CC38FFA8" Offset="0.815"/>
							<GradientStop Color="#9047FFAE" Offset="0.422"/>
						</LinearGradientBrush>
					</Border.OpacityMask>
				</Border>
				<TextBlock x:Name="CurrentLyrics" Foreground="White" Margin="7" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextWrapping="Wrap" TextTrimming="WordEllipsis"/>
			</Grid>
			<Grid x:Name="FirstTimePanel" Background="#7F000000">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" Foreground="White" TextAlignment="Center" TextWrapping="Wrap" Text="{x:Static resx:Resources.FirstTimePanelTextBlock}"/>
            </Grid>
		</Grid>
	</Grid>
</local:WindowBase>